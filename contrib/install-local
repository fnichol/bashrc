#!/usr/bin/env bash

if [[ -d "${HOME}/.bash" ]] ; then
  printf "\n>> ${HOME}/.bash must not exist so not installing.\n\n"
  exit 2
fi

if command -v git >/dev/null ; then
  printf "===> Cloning git repository to ${HOME}/.bash ...\n"
  builtin cd "${HOME}" && \
    ( git clone --depth 1 git://github.com/fnichol/bashrc.git .bash || \
    git clone http://github.com/fnichol/bashrc.git .bash )
elif command -v curl >/dev/null && command -v python >/dev/null; then
  tarball_install=1
  case "$(uname -s)" in
    SunOS)  tar_cmd="$(which gtar)"  ;;
    *)      tar_cmd="$(which tar)"   ;;
  esac
  [[ -z "$tar_cmd" ]] && \
    printf ">>>> tar command not found on path, aborting.\n" && exit 13

  printf "===> Git not found, so downloading tarball to ${HOME}/.bash ...\n"
  mkdir -p "${HOME}/.bash"
  curl -LsSf http://github.com/fnichol/bashrc/tarball/master | \
    ${tar_cmd} xvz -C${HOME}/.bash --strip 1
  printf "===> Determining version date from github api ...\n"
  tip_date="$(curl -sSL \
    http://github.com/api/v2/json/commits/show/fnichol/bashrc/HEAD | \
    python -c 'import sys; import json; j = json.loads(sys.stdin.read()); print j["commit"]["committed_date"];')"
  if [ "$?" -ne 0 ] ; then tip_date="UNKNOWN" ; fi
  printf "TARBALL $tip_date" > "${HOME}/.bash/tip.date"
else
  printf "\n>> Neither git nor curl (with python) could be found on path so not installing.\n\n"
  exit 3
fi

printf "===> Running bashrc init ...\n"
bash -c "bashrc_local_install=1; bashrc_prefix=\"\${HOME}/.bash\"; source \${bashrc_prefix}/bashrc && bashrc init"
